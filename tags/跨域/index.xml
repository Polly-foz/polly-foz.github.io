<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>跨域 on Polly-foz&#39;s Blog</title>
    <link>http://yangpeiya.xyz/tags/%E8%B7%A8%E5%9F%9F/</link>
    <description>Recent content in 跨域 on Polly-foz&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 27 Jan 2020 22:56:06 +0800</lastBuildDate>
    
	<atom:link href="http://yangpeiya.xyz/tags/%E8%B7%A8%E5%9F%9F/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>JavaScript 跨域</title>
      <link>http://yangpeiya.xyz/js-cross-origin/</link>
      <pubDate>Mon, 27 Jan 2020 22:56:06 +0800</pubDate>
      
      <guid>http://yangpeiya.xyz/js-cross-origin/</guid>
      <description>1. 什么是同源 如果两个页面的协议，端口（如果有指定）和主机都相同，则两个页面具有相同的源。我们也可以把它称为“协议/主机/端口 tuple”，或简单地叫做“tuple&amp;rdquo;. (&amp;ldquo;tuple&amp;rdquo; ，“元”，是指一些事物组合在一起形成一个整体，比如（1，2）叫二元，（1，2，3）叫三元)
http://store.company.com/dir/page.html同源检测的示例:
  URL 结果 原因   http://store.company.com/dir2/other.html 成功 &amp;nbsp;只有路径不同   http://store.company.com/dir/inner/another.html 成功 &amp;nbsp;只有路径不同   https://store.company.com/secure.html 失败 不同协议 ( https和http )   http://store.company.com:81/dir/etc.html 失败 不同端口 ( http:// 80是默认的)   http://news.company.com/dir/other.html 失败 不同域名&amp;nbsp;( news和store )    2. 什么是跨域 不同源即跨域。当一个资源从与该资源本身所在的服务器不同的域、协议或端口请求一个资源时（两者不符合同源策略），资源会发起一个跨域 HTTP 请求（CORS request）。 1中表格的后三个例子就是跨域。
3. JSONP跨域 Jsonp(JSON with Padding) 是跨域的一种解决方案。JSONP 的原理很简单，就是利用 &amp;lt;script&amp;gt; 标签没有跨域限制的漏洞。通过 &amp;lt;script&amp;gt; 标签指向一个需要访问的地址并提供一个回调函数来接收数据。
假如http://data-requester.com:9999想要http://data-owner.com:8888数据库中的friends.json文件，
http://data-owner.com:8888服务端node.js代码：
if(path === &#39;/friends.</description>
    </item>
    
  </channel>
</rss>